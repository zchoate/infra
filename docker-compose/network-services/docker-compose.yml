version: '3'
services:
  proxy:
    image: traefik:latest
    container_name: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /home/zach/data/traefik/certs:/letsencrypt
    command:
      - --api.insecure=true
      - --accesslog=true
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=network-services_backend
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.influx.address=:8086
      - --certificatesresolvers.cn.acme.dnschallenge=true
      - --certificatesresolvers.cn.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.cn.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.cn.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.cn.acme.dnschallenge.resolvers=1.1.1.1:53
    labels:
      - traefik.http.routers.redirs.entrypoints=web
      - traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.redirs.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
    env_file: traefik.env
    ports:
      - 443:443
      - 80:80
      - 8080:8080
      - 8086:8086
    dns:
      - 1.1.1.1
    networks:
      - default
      - backend
    # this makes HA work with Traefik with host network mode
    extra_hosts:
      - host.docker.internal:172.17.0.1
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    # bluetooth support requires dbus mapped, bluez installed on host system, dbus-broker installed on host
    volumes:
      - /home/zach/ha-config:/config
      - /etc/localtime:/etc/localtime:ro
      - /dev/serial/by-id/usb-dresden_elektronik_ingenieurtechnik_GmbH_ConBee_II_DE2477395-if00:/dev/ttyS0
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true
    network_mode: host
    labels:
      - traefik.enable=true
      - traefik.http.routers.ha.rule=Host(`${HA_HOSTNAME}`)
      - traefik.http.routers.ha.entrypoints=websecure
      - traefik.http.routers.ha.tls=true
      - traefik.http.routers.ha.tls.certresolver=cn
      - traefik.http.routers.ha.service=ha
      - traefik.http.services.ha.loadbalancer.server.port=8123
  scrypted:
    container_name: scrypted
    image: ghcr.io/koush/scrypted
    restart: unless-stopped
    network_mode: host
    privileged: true
    volumes:
      - /home/zach/data/scrypted/volume:/server/volume
    environment:
      - SCRYPTED_DOCKER_AVAHI=true
      - SCRYPTED_INSECURE_PORT=11080
    labels:
      - traefik.enable=true
      - traefik.http.routers.scrypted.rule=Host(`${NVR_HOSTNAME}`)
      - traefik.http.routers.scrypted.entrypoints=websecure
      - traefik.http.routers.scrypted.tls=true
      - traefik.http.routers.scrypted.tls.certresolver=cn
      - traefik.http.routers.scrypted.service=scrypted
      - traefik.http.services.scrypted.loadbalancer.server.port=11080
  omada-controller:
    container_name: omada-controller
    build:
      context: /home/zach/omada-controller/.
      args:
        BASE: ubuntu:20.04
        ARCH: amd64
    env_file: omada.env
    network_mode: host
    volumes:
      - /home/zach/data/omada/data:/opt/tplink/EAPController/data
      - /home/zach/data/omada/work:/opt/tplink/EAPController/work
      - /home/zach/data/omada/logs:/opt/tplink/EAPController/logs
    restart: unless-stopped
  dns:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - 53:53
      - 53:53/udp
    env_file: pihole.env
    volumes:
      - /home/zach/data/pihole/pihole:/etc/pihole
      - /home/zach/data/pihole/dnsmasq.d:/etc/dnsmasq.d
    restart: unless-stopped
    networks:
      - default
      - backend
    labels:
      - traefik.enable=true
      - traefik.http.routers.pihole.rule=Host(`${PIHOLE_HOSTNAME}`)
      - traefik.http.routers.pihole.entrypoints=websecure
      - traefik.http.routers.pihole.tls=true
      - traefik.http.routers.pihole.tls.certresolver=cn
      - traefik.http.routers.pihole.service=pihole
      - traefik.http.services.pihole.loadbalancer.server.port=80
      - traefik.http.routers.pihole_http.rule=Host(`${PIHOLE_HOSTNAME}`)
      - treafik.http.routers.pihole_http.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.routers.pihole_http.entrypoints=web

networks:
  default:
  backend: